###########
# BUILDER #
###########
FROM python:3.9.7-alpine3.14 as builder

# work directory
WORKDIR /app

# environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install os packages
RUN apk update \
    && apk add build-base py-pip jpeg-dev zlib-dev \
    && apk add postgresql-dev gcc python3-dev musl-dev

# install dependencies
COPY ./requirements.txt .
RUN pip install --upgrade pip \
    && pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt \
    && pip install flake8==4.0.1

# lint
COPY . .
RUN flake8 --ignore=E501 .


#########
# FINAL #
#########
FROM python:3.9.7-alpine3.14

# create directory for the app user
RUN mkdir -p /home/deploy

# create the app user
RUN addgroup -S deploy && adduser -S deploy -G deploy

# create the appropriate directories
ENV HOME=/home/deploy
ENV APP_HOME=/home/deploy/app
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
COPY --from=builder /app/wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN apk update && apk add libpq build-base py-pip jpeg-dev zlib-dev \
    && pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME
RUN mv $APP_HOME/static/ $APP_HOME/staticfiles/ \
    && mkdir $APP_HOME/static/ \
    && sed -r -i 's|(^STATICFILES_DIRS.*)static|\1staticfiles|' $APP_HOME/platzigram/settings.py \
    && sed -i '/STATIC_ROOT/s/^#\ //' $APP_HOME/platzigram/settings.py

# chown all the files to the app user
RUN chown -R deploy:deploy $APP_HOME

# change to the app user
USER deploy

# run entrypoint.prod.sh
ENTRYPOINT ["/home/deploy/app/entrypoint.prod.sh"]
